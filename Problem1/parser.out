Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> exp
Rule 1     exp -> atom
Rule 2     exp -> quoted_list
Rule 3     exp -> LPAREN call call RPAREN
Rule 4     exp -> call
Rule 5     quoted_list -> QUOTE list
Rule 6     list -> LPAREN items RPAREN
Rule 7     items -> item items
Rule 8     items -> empty
Rule 9     empty -> <empty>
Rule 10    item -> atom
Rule 11    item -> quoted_list
Rule 12    item -> call
Rule 13    item -> empty
Rule 14    call -> LPAREN LET LPAREN SIMB NUM RPAREN RPAREN
Rule 15    call -> LET LPAREN SIMB NUM RPAREN
Rule 16    call -> LPAREN IF bool NUM NUM RPAREN
Rule 17    call -> LPAREN SIMB items RPAREN
Rule 18    atom -> SIMB
Rule 19    atom -> bool
Rule 20    atom -> NUM
Rule 21    atom -> TEXT
Rule 22    atom -> <empty>
Rule 23    bool -> TRUE
Rule 24    bool -> FALSE
Rule 25    atom -> NIL

Terminals, with rules where they appear

FALSE                : 24
IF                   : 16
LET                  : 14 15
LPAREN               : 3 6 14 14 15 16 17
NIL                  : 25
NUM                  : 14 15 16 16 20
QUOTE                : 5
RPAREN               : 3 6 14 14 15 16 17
SIMB                 : 14 15 17 18
TEXT                 : 21
TRUE                 : 23
error                : 

Nonterminals, with rules where they appear

atom                 : 1 10
bool                 : 16 19
call                 : 3 3 4 12
empty                : 8 13
exp                  : 0
item                 : 7
items                : 6 7 17
list                 : 5
quoted_list          : 2 11

Parsing method: LALR

state 0

    (0) S' -> . exp
    (1) exp -> . atom
    (2) exp -> . quoted_list
    (3) exp -> . LPAREN call call RPAREN
    (4) exp -> . call
    (18) atom -> . SIMB
    (19) atom -> . bool
    (20) atom -> . NUM
    (21) atom -> . TEXT
    (22) atom -> .
    (25) atom -> . NIL
    (5) quoted_list -> . QUOTE list
    (14) call -> . LPAREN LET LPAREN SIMB NUM RPAREN RPAREN
    (15) call -> . LET LPAREN SIMB NUM RPAREN
    (16) call -> . LPAREN IF bool NUM NUM RPAREN
    (17) call -> . LPAREN SIMB items RPAREN
    (23) bool -> . TRUE
    (24) bool -> . FALSE

    LPAREN          shift and go to state 11
    SIMB            shift and go to state 7
    NUM             shift and go to state 8
    TEXT            shift and go to state 4
    $end            reduce using rule 22 (atom -> .)
    NIL             shift and go to state 2
    QUOTE           shift and go to state 10
    LET             shift and go to state 6
    TRUE            shift and go to state 14
    FALSE           shift and go to state 5

    quoted_list                    shift and go to state 3
    bool                           shift and go to state 13
    exp                            shift and go to state 1
    atom                           shift and go to state 12
    call                           shift and go to state 9

state 1

    (0) S' -> exp .



state 2

    (25) atom -> NIL .

    $end            reduce using rule 25 (atom -> NIL .)
    SIMB            reduce using rule 25 (atom -> NIL .)
    NUM             reduce using rule 25 (atom -> NIL .)
    TEXT            reduce using rule 25 (atom -> NIL .)
    NIL             reduce using rule 25 (atom -> NIL .)
    QUOTE           reduce using rule 25 (atom -> NIL .)
    LPAREN          reduce using rule 25 (atom -> NIL .)
    LET             reduce using rule 25 (atom -> NIL .)
    TRUE            reduce using rule 25 (atom -> NIL .)
    FALSE           reduce using rule 25 (atom -> NIL .)
    RPAREN          reduce using rule 25 (atom -> NIL .)


state 3

    (2) exp -> quoted_list .

    $end            reduce using rule 2 (exp -> quoted_list .)


state 4

    (21) atom -> TEXT .

    $end            reduce using rule 21 (atom -> TEXT .)
    SIMB            reduce using rule 21 (atom -> TEXT .)
    NUM             reduce using rule 21 (atom -> TEXT .)
    TEXT            reduce using rule 21 (atom -> TEXT .)
    NIL             reduce using rule 21 (atom -> TEXT .)
    QUOTE           reduce using rule 21 (atom -> TEXT .)
    LPAREN          reduce using rule 21 (atom -> TEXT .)
    LET             reduce using rule 21 (atom -> TEXT .)
    TRUE            reduce using rule 21 (atom -> TEXT .)
    FALSE           reduce using rule 21 (atom -> TEXT .)
    RPAREN          reduce using rule 21 (atom -> TEXT .)


state 5

    (24) bool -> FALSE .

    SIMB            reduce using rule 24 (bool -> FALSE .)
    NUM             reduce using rule 24 (bool -> FALSE .)
    TEXT            reduce using rule 24 (bool -> FALSE .)
    NIL             reduce using rule 24 (bool -> FALSE .)
    QUOTE           reduce using rule 24 (bool -> FALSE .)
    LPAREN          reduce using rule 24 (bool -> FALSE .)
    LET             reduce using rule 24 (bool -> FALSE .)
    TRUE            reduce using rule 24 (bool -> FALSE .)
    FALSE           reduce using rule 24 (bool -> FALSE .)
    RPAREN          reduce using rule 24 (bool -> FALSE .)
    $end            reduce using rule 24 (bool -> FALSE .)


state 6

    (15) call -> LET . LPAREN SIMB NUM RPAREN

    LPAREN          shift and go to state 15


state 7

    (18) atom -> SIMB .

    $end            reduce using rule 18 (atom -> SIMB .)
    SIMB            reduce using rule 18 (atom -> SIMB .)
    NUM             reduce using rule 18 (atom -> SIMB .)
    TEXT            reduce using rule 18 (atom -> SIMB .)
    NIL             reduce using rule 18 (atom -> SIMB .)
    QUOTE           reduce using rule 18 (atom -> SIMB .)
    LPAREN          reduce using rule 18 (atom -> SIMB .)
    LET             reduce using rule 18 (atom -> SIMB .)
    TRUE            reduce using rule 18 (atom -> SIMB .)
    FALSE           reduce using rule 18 (atom -> SIMB .)
    RPAREN          reduce using rule 18 (atom -> SIMB .)


state 8

    (20) atom -> NUM .

    $end            reduce using rule 20 (atom -> NUM .)
    SIMB            reduce using rule 20 (atom -> NUM .)
    NUM             reduce using rule 20 (atom -> NUM .)
    TEXT            reduce using rule 20 (atom -> NUM .)
    NIL             reduce using rule 20 (atom -> NUM .)
    QUOTE           reduce using rule 20 (atom -> NUM .)
    LPAREN          reduce using rule 20 (atom -> NUM .)
    LET             reduce using rule 20 (atom -> NUM .)
    TRUE            reduce using rule 20 (atom -> NUM .)
    FALSE           reduce using rule 20 (atom -> NUM .)
    RPAREN          reduce using rule 20 (atom -> NUM .)


state 9

    (4) exp -> call .

    $end            reduce using rule 4 (exp -> call .)


state 10

    (5) quoted_list -> QUOTE . list
    (6) list -> . LPAREN items RPAREN

    LPAREN          shift and go to state 17

    list                           shift and go to state 16

state 11

    (3) exp -> LPAREN . call call RPAREN
    (14) call -> LPAREN . LET LPAREN SIMB NUM RPAREN RPAREN
    (16) call -> LPAREN . IF bool NUM NUM RPAREN
    (17) call -> LPAREN . SIMB items RPAREN
    (14) call -> . LPAREN LET LPAREN SIMB NUM RPAREN RPAREN
    (15) call -> . LET LPAREN SIMB NUM RPAREN
    (16) call -> . LPAREN IF bool NUM NUM RPAREN
    (17) call -> . LPAREN SIMB items RPAREN

    LET             shift and go to state 21
    IF              shift and go to state 22
    SIMB            shift and go to state 18
    LPAREN          shift and go to state 20

    call                           shift and go to state 19

state 12

    (1) exp -> atom .

    $end            reduce using rule 1 (exp -> atom .)


state 13

    (19) atom -> bool .

    $end            reduce using rule 19 (atom -> bool .)
    SIMB            reduce using rule 19 (atom -> bool .)
    NUM             reduce using rule 19 (atom -> bool .)
    TEXT            reduce using rule 19 (atom -> bool .)
    NIL             reduce using rule 19 (atom -> bool .)
    QUOTE           reduce using rule 19 (atom -> bool .)
    LPAREN          reduce using rule 19 (atom -> bool .)
    LET             reduce using rule 19 (atom -> bool .)
    TRUE            reduce using rule 19 (atom -> bool .)
    FALSE           reduce using rule 19 (atom -> bool .)
    RPAREN          reduce using rule 19 (atom -> bool .)


state 14

    (23) bool -> TRUE .

    SIMB            reduce using rule 23 (bool -> TRUE .)
    NUM             reduce using rule 23 (bool -> TRUE .)
    TEXT            reduce using rule 23 (bool -> TRUE .)
    NIL             reduce using rule 23 (bool -> TRUE .)
    QUOTE           reduce using rule 23 (bool -> TRUE .)
    LPAREN          reduce using rule 23 (bool -> TRUE .)
    LET             reduce using rule 23 (bool -> TRUE .)
    TRUE            reduce using rule 23 (bool -> TRUE .)
    FALSE           reduce using rule 23 (bool -> TRUE .)
    RPAREN          reduce using rule 23 (bool -> TRUE .)
    $end            reduce using rule 23 (bool -> TRUE .)


state 15

    (15) call -> LET LPAREN . SIMB NUM RPAREN

    SIMB            shift and go to state 23


state 16

    (5) quoted_list -> QUOTE list .

    SIMB            reduce using rule 5 (quoted_list -> QUOTE list .)
    NUM             reduce using rule 5 (quoted_list -> QUOTE list .)
    TEXT            reduce using rule 5 (quoted_list -> QUOTE list .)
    NIL             reduce using rule 5 (quoted_list -> QUOTE list .)
    QUOTE           reduce using rule 5 (quoted_list -> QUOTE list .)
    LPAREN          reduce using rule 5 (quoted_list -> QUOTE list .)
    LET             reduce using rule 5 (quoted_list -> QUOTE list .)
    TRUE            reduce using rule 5 (quoted_list -> QUOTE list .)
    FALSE           reduce using rule 5 (quoted_list -> QUOTE list .)
    RPAREN          reduce using rule 5 (quoted_list -> QUOTE list .)
    $end            reduce using rule 5 (quoted_list -> QUOTE list .)


state 17

    (6) list -> LPAREN . items RPAREN
    (7) items -> . item items
    (8) items -> . empty
    (10) item -> . atom
    (11) item -> . quoted_list
    (12) item -> . call
    (13) item -> . empty
    (9) empty -> .
    (18) atom -> . SIMB
    (19) atom -> . bool
    (20) atom -> . NUM
    (21) atom -> . TEXT
    (22) atom -> .
    (25) atom -> . NIL
    (5) quoted_list -> . QUOTE list
    (14) call -> . LPAREN LET LPAREN SIMB NUM RPAREN RPAREN
    (15) call -> . LET LPAREN SIMB NUM RPAREN
    (16) call -> . LPAREN IF bool NUM NUM RPAREN
    (17) call -> . LPAREN SIMB items RPAREN
    (23) bool -> . TRUE
    (24) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! reduce/reduce conflict for NIL resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for QUOTE resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for LET resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 9 (empty -> .)
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RPAREN          reduce using rule 9 (empty -> .)
    SIMB            shift and go to state 7
    NUM             shift and go to state 8
    TEXT            shift and go to state 4
    NIL             shift and go to state 2
    QUOTE           shift and go to state 10
    LPAREN          shift and go to state 20
    LET             shift and go to state 6
    TRUE            shift and go to state 14
    FALSE           shift and go to state 5

  ! SIMB            [ reduce using rule 9 (empty -> .) ]
  ! NUM             [ reduce using rule 9 (empty -> .) ]
  ! TEXT            [ reduce using rule 9 (empty -> .) ]
  ! NIL             [ reduce using rule 9 (empty -> .) ]
  ! QUOTE           [ reduce using rule 9 (empty -> .) ]
  ! LPAREN          [ reduce using rule 9 (empty -> .) ]
  ! LET             [ reduce using rule 9 (empty -> .) ]
  ! TRUE            [ reduce using rule 9 (empty -> .) ]
  ! FALSE           [ reduce using rule 9 (empty -> .) ]
  ! SIMB            [ reduce using rule 22 (atom -> .) ]
  ! NUM             [ reduce using rule 22 (atom -> .) ]
  ! TEXT            [ reduce using rule 22 (atom -> .) ]
  ! NIL             [ reduce using rule 22 (atom -> .) ]
  ! QUOTE           [ reduce using rule 22 (atom -> .) ]
  ! LPAREN          [ reduce using rule 22 (atom -> .) ]
  ! LET             [ reduce using rule 22 (atom -> .) ]
  ! TRUE            [ reduce using rule 22 (atom -> .) ]
  ! FALSE           [ reduce using rule 22 (atom -> .) ]
  ! RPAREN          [ reduce using rule 22 (atom -> .) ]

    quoted_list                    shift and go to state 24
    items                          shift and go to state 25
    item                           shift and go to state 26
    call                           shift and go to state 27
    atom                           shift and go to state 28
    bool                           shift and go to state 13
    empty                          shift and go to state 29

state 18

    (17) call -> LPAREN SIMB . items RPAREN
    (7) items -> . item items
    (8) items -> . empty
    (10) item -> . atom
    (11) item -> . quoted_list
    (12) item -> . call
    (13) item -> . empty
    (9) empty -> .
    (18) atom -> . SIMB
    (19) atom -> . bool
    (20) atom -> . NUM
    (21) atom -> . TEXT
    (22) atom -> .
    (25) atom -> . NIL
    (5) quoted_list -> . QUOTE list
    (14) call -> . LPAREN LET LPAREN SIMB NUM RPAREN RPAREN
    (15) call -> . LET LPAREN SIMB NUM RPAREN
    (16) call -> . LPAREN IF bool NUM NUM RPAREN
    (17) call -> . LPAREN SIMB items RPAREN
    (23) bool -> . TRUE
    (24) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! reduce/reduce conflict for NIL resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for QUOTE resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for LET resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 9 (empty -> .)
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RPAREN          reduce using rule 9 (empty -> .)
    SIMB            shift and go to state 7
    NUM             shift and go to state 8
    TEXT            shift and go to state 4
    NIL             shift and go to state 2
    QUOTE           shift and go to state 10
    LPAREN          shift and go to state 20
    LET             shift and go to state 6
    TRUE            shift and go to state 14
    FALSE           shift and go to state 5

  ! SIMB            [ reduce using rule 9 (empty -> .) ]
  ! NUM             [ reduce using rule 9 (empty -> .) ]
  ! TEXT            [ reduce using rule 9 (empty -> .) ]
  ! NIL             [ reduce using rule 9 (empty -> .) ]
  ! QUOTE           [ reduce using rule 9 (empty -> .) ]
  ! LPAREN          [ reduce using rule 9 (empty -> .) ]
  ! LET             [ reduce using rule 9 (empty -> .) ]
  ! TRUE            [ reduce using rule 9 (empty -> .) ]
  ! FALSE           [ reduce using rule 9 (empty -> .) ]
  ! SIMB            [ reduce using rule 22 (atom -> .) ]
  ! NUM             [ reduce using rule 22 (atom -> .) ]
  ! TEXT            [ reduce using rule 22 (atom -> .) ]
  ! NIL             [ reduce using rule 22 (atom -> .) ]
  ! QUOTE           [ reduce using rule 22 (atom -> .) ]
  ! LPAREN          [ reduce using rule 22 (atom -> .) ]
  ! LET             [ reduce using rule 22 (atom -> .) ]
  ! TRUE            [ reduce using rule 22 (atom -> .) ]
  ! FALSE           [ reduce using rule 22 (atom -> .) ]
  ! RPAREN          [ reduce using rule 22 (atom -> .) ]

    quoted_list                    shift and go to state 24
    items                          shift and go to state 30
    item                           shift and go to state 26
    call                           shift and go to state 27
    atom                           shift and go to state 28
    bool                           shift and go to state 13
    empty                          shift and go to state 29

state 19

    (3) exp -> LPAREN call . call RPAREN
    (14) call -> . LPAREN LET LPAREN SIMB NUM RPAREN RPAREN
    (15) call -> . LET LPAREN SIMB NUM RPAREN
    (16) call -> . LPAREN IF bool NUM NUM RPAREN
    (17) call -> . LPAREN SIMB items RPAREN

    LPAREN          shift and go to state 20
    LET             shift and go to state 6

    call                           shift and go to state 31

state 20

    (14) call -> LPAREN . LET LPAREN SIMB NUM RPAREN RPAREN
    (16) call -> LPAREN . IF bool NUM NUM RPAREN
    (17) call -> LPAREN . SIMB items RPAREN

    LET             shift and go to state 32
    IF              shift and go to state 22
    SIMB            shift and go to state 18


state 21

    (14) call -> LPAREN LET . LPAREN SIMB NUM RPAREN RPAREN
    (15) call -> LET . LPAREN SIMB NUM RPAREN

    LPAREN          shift and go to state 33


state 22

    (16) call -> LPAREN IF . bool NUM NUM RPAREN
    (23) bool -> . TRUE
    (24) bool -> . FALSE

    TRUE            shift and go to state 14
    FALSE           shift and go to state 5

    bool                           shift and go to state 34

state 23

    (15) call -> LET LPAREN SIMB . NUM RPAREN

    NUM             shift and go to state 35


state 24

    (11) item -> quoted_list .

    SIMB            reduce using rule 11 (item -> quoted_list .)
    NUM             reduce using rule 11 (item -> quoted_list .)
    TEXT            reduce using rule 11 (item -> quoted_list .)
    NIL             reduce using rule 11 (item -> quoted_list .)
    QUOTE           reduce using rule 11 (item -> quoted_list .)
    LPAREN          reduce using rule 11 (item -> quoted_list .)
    LET             reduce using rule 11 (item -> quoted_list .)
    TRUE            reduce using rule 11 (item -> quoted_list .)
    FALSE           reduce using rule 11 (item -> quoted_list .)
    RPAREN          reduce using rule 11 (item -> quoted_list .)


state 25

    (6) list -> LPAREN items . RPAREN

    RPAREN          shift and go to state 36


state 26

    (7) items -> item . items
    (7) items -> . item items
    (8) items -> . empty
    (10) item -> . atom
    (11) item -> . quoted_list
    (12) item -> . call
    (13) item -> . empty
    (9) empty -> .
    (18) atom -> . SIMB
    (19) atom -> . bool
    (20) atom -> . NUM
    (21) atom -> . TEXT
    (22) atom -> .
    (25) atom -> . NIL
    (5) quoted_list -> . QUOTE list
    (14) call -> . LPAREN LET LPAREN SIMB NUM RPAREN RPAREN
    (15) call -> . LET LPAREN SIMB NUM RPAREN
    (16) call -> . LPAREN IF bool NUM NUM RPAREN
    (17) call -> . LPAREN SIMB items RPAREN
    (23) bool -> . TRUE
    (24) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! reduce/reduce conflict for NIL resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for QUOTE resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for LET resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 9 (empty -> .)
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RPAREN          reduce using rule 9 (empty -> .)
    SIMB            shift and go to state 7
    NUM             shift and go to state 8
    TEXT            shift and go to state 4
    NIL             shift and go to state 2
    QUOTE           shift and go to state 10
    LPAREN          shift and go to state 20
    LET             shift and go to state 6
    TRUE            shift and go to state 14
    FALSE           shift and go to state 5

  ! SIMB            [ reduce using rule 9 (empty -> .) ]
  ! NUM             [ reduce using rule 9 (empty -> .) ]
  ! TEXT            [ reduce using rule 9 (empty -> .) ]
  ! NIL             [ reduce using rule 9 (empty -> .) ]
  ! QUOTE           [ reduce using rule 9 (empty -> .) ]
  ! LPAREN          [ reduce using rule 9 (empty -> .) ]
  ! LET             [ reduce using rule 9 (empty -> .) ]
  ! TRUE            [ reduce using rule 9 (empty -> .) ]
  ! FALSE           [ reduce using rule 9 (empty -> .) ]
  ! SIMB            [ reduce using rule 22 (atom -> .) ]
  ! NUM             [ reduce using rule 22 (atom -> .) ]
  ! TEXT            [ reduce using rule 22 (atom -> .) ]
  ! NIL             [ reduce using rule 22 (atom -> .) ]
  ! QUOTE           [ reduce using rule 22 (atom -> .) ]
  ! LPAREN          [ reduce using rule 22 (atom -> .) ]
  ! LET             [ reduce using rule 22 (atom -> .) ]
  ! TRUE            [ reduce using rule 22 (atom -> .) ]
  ! FALSE           [ reduce using rule 22 (atom -> .) ]
  ! RPAREN          [ reduce using rule 22 (atom -> .) ]

    quoted_list                    shift and go to state 24
    items                          shift and go to state 37
    item                           shift and go to state 26
    call                           shift and go to state 27
    atom                           shift and go to state 28
    bool                           shift and go to state 13
    empty                          shift and go to state 29

state 27

    (12) item -> call .

    SIMB            reduce using rule 12 (item -> call .)
    NUM             reduce using rule 12 (item -> call .)
    TEXT            reduce using rule 12 (item -> call .)
    NIL             reduce using rule 12 (item -> call .)
    QUOTE           reduce using rule 12 (item -> call .)
    LPAREN          reduce using rule 12 (item -> call .)
    LET             reduce using rule 12 (item -> call .)
    TRUE            reduce using rule 12 (item -> call .)
    FALSE           reduce using rule 12 (item -> call .)
    RPAREN          reduce using rule 12 (item -> call .)


state 28

    (10) item -> atom .

    SIMB            reduce using rule 10 (item -> atom .)
    NUM             reduce using rule 10 (item -> atom .)
    TEXT            reduce using rule 10 (item -> atom .)
    NIL             reduce using rule 10 (item -> atom .)
    QUOTE           reduce using rule 10 (item -> atom .)
    LPAREN          reduce using rule 10 (item -> atom .)
    LET             reduce using rule 10 (item -> atom .)
    TRUE            reduce using rule 10 (item -> atom .)
    FALSE           reduce using rule 10 (item -> atom .)
    RPAREN          reduce using rule 10 (item -> atom .)


state 29

    (8) items -> empty .
    (13) item -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 8 (items -> empty .)
    RPAREN          reduce using rule 8 (items -> empty .)
    SIMB            reduce using rule 13 (item -> empty .)
    NUM             reduce using rule 13 (item -> empty .)
    TEXT            reduce using rule 13 (item -> empty .)
    NIL             reduce using rule 13 (item -> empty .)
    QUOTE           reduce using rule 13 (item -> empty .)
    LPAREN          reduce using rule 13 (item -> empty .)
    LET             reduce using rule 13 (item -> empty .)
    TRUE            reduce using rule 13 (item -> empty .)
    FALSE           reduce using rule 13 (item -> empty .)

  ! RPAREN          [ reduce using rule 13 (item -> empty .) ]


state 30

    (17) call -> LPAREN SIMB items . RPAREN

    RPAREN          shift and go to state 38


state 31

    (3) exp -> LPAREN call call . RPAREN

    RPAREN          shift and go to state 39


state 32

    (14) call -> LPAREN LET . LPAREN SIMB NUM RPAREN RPAREN

    LPAREN          shift and go to state 40


state 33

    (14) call -> LPAREN LET LPAREN . SIMB NUM RPAREN RPAREN
    (15) call -> LET LPAREN . SIMB NUM RPAREN

    SIMB            shift and go to state 41


state 34

    (16) call -> LPAREN IF bool . NUM NUM RPAREN

    NUM             shift and go to state 42


state 35

    (15) call -> LET LPAREN SIMB NUM . RPAREN

    RPAREN          shift and go to state 43


state 36

    (6) list -> LPAREN items RPAREN .

    $end            reduce using rule 6 (list -> LPAREN items RPAREN .)
    SIMB            reduce using rule 6 (list -> LPAREN items RPAREN .)
    NUM             reduce using rule 6 (list -> LPAREN items RPAREN .)
    TEXT            reduce using rule 6 (list -> LPAREN items RPAREN .)
    NIL             reduce using rule 6 (list -> LPAREN items RPAREN .)
    QUOTE           reduce using rule 6 (list -> LPAREN items RPAREN .)
    LPAREN          reduce using rule 6 (list -> LPAREN items RPAREN .)
    LET             reduce using rule 6 (list -> LPAREN items RPAREN .)
    TRUE            reduce using rule 6 (list -> LPAREN items RPAREN .)
    FALSE           reduce using rule 6 (list -> LPAREN items RPAREN .)
    RPAREN          reduce using rule 6 (list -> LPAREN items RPAREN .)


state 37

    (7) items -> item items .

    RPAREN          reduce using rule 7 (items -> item items .)


state 38

    (17) call -> LPAREN SIMB items RPAREN .

    LPAREN          reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    LET             reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    SIMB            reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    NUM             reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    TEXT            reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    NIL             reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    QUOTE           reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    TRUE            reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    FALSE           reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    RPAREN          reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    $end            reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)


state 39

    (3) exp -> LPAREN call call RPAREN .

    $end            reduce using rule 3 (exp -> LPAREN call call RPAREN .)


state 40

    (14) call -> LPAREN LET LPAREN . SIMB NUM RPAREN RPAREN

    SIMB            shift and go to state 44


state 41

    (14) call -> LPAREN LET LPAREN SIMB . NUM RPAREN RPAREN
    (15) call -> LET LPAREN SIMB . NUM RPAREN

    NUM             shift and go to state 45


state 42

    (16) call -> LPAREN IF bool NUM . NUM RPAREN

    NUM             shift and go to state 46


state 43

    (15) call -> LET LPAREN SIMB NUM RPAREN .

    SIMB            reduce using rule 15 (call -> LET LPAREN SIMB NUM RPAREN .)
    NUM             reduce using rule 15 (call -> LET LPAREN SIMB NUM RPAREN .)
    TEXT            reduce using rule 15 (call -> LET LPAREN SIMB NUM RPAREN .)
    NIL             reduce using rule 15 (call -> LET LPAREN SIMB NUM RPAREN .)
    QUOTE           reduce using rule 15 (call -> LET LPAREN SIMB NUM RPAREN .)
    LPAREN          reduce using rule 15 (call -> LET LPAREN SIMB NUM RPAREN .)
    LET             reduce using rule 15 (call -> LET LPAREN SIMB NUM RPAREN .)
    TRUE            reduce using rule 15 (call -> LET LPAREN SIMB NUM RPAREN .)
    FALSE           reduce using rule 15 (call -> LET LPAREN SIMB NUM RPAREN .)
    RPAREN          reduce using rule 15 (call -> LET LPAREN SIMB NUM RPAREN .)
    $end            reduce using rule 15 (call -> LET LPAREN SIMB NUM RPAREN .)


state 44

    (14) call -> LPAREN LET LPAREN SIMB . NUM RPAREN RPAREN

    NUM             shift and go to state 47


state 45

    (14) call -> LPAREN LET LPAREN SIMB NUM . RPAREN RPAREN
    (15) call -> LET LPAREN SIMB NUM . RPAREN

    RPAREN          shift and go to state 48


state 46

    (16) call -> LPAREN IF bool NUM NUM . RPAREN

    RPAREN          shift and go to state 49


state 47

    (14) call -> LPAREN LET LPAREN SIMB NUM . RPAREN RPAREN

    RPAREN          shift and go to state 50


state 48

    (14) call -> LPAREN LET LPAREN SIMB NUM RPAREN . RPAREN
    (15) call -> LET LPAREN SIMB NUM RPAREN .

    RPAREN          shift and go to state 51
    LPAREN          reduce using rule 15 (call -> LET LPAREN SIMB NUM RPAREN .)
    LET             reduce using rule 15 (call -> LET LPAREN SIMB NUM RPAREN .)


state 49

    (16) call -> LPAREN IF bool NUM NUM RPAREN .

    LPAREN          reduce using rule 16 (call -> LPAREN IF bool NUM NUM RPAREN .)
    LET             reduce using rule 16 (call -> LPAREN IF bool NUM NUM RPAREN .)
    SIMB            reduce using rule 16 (call -> LPAREN IF bool NUM NUM RPAREN .)
    NUM             reduce using rule 16 (call -> LPAREN IF bool NUM NUM RPAREN .)
    TEXT            reduce using rule 16 (call -> LPAREN IF bool NUM NUM RPAREN .)
    NIL             reduce using rule 16 (call -> LPAREN IF bool NUM NUM RPAREN .)
    QUOTE           reduce using rule 16 (call -> LPAREN IF bool NUM NUM RPAREN .)
    TRUE            reduce using rule 16 (call -> LPAREN IF bool NUM NUM RPAREN .)
    FALSE           reduce using rule 16 (call -> LPAREN IF bool NUM NUM RPAREN .)
    RPAREN          reduce using rule 16 (call -> LPAREN IF bool NUM NUM RPAREN .)
    $end            reduce using rule 16 (call -> LPAREN IF bool NUM NUM RPAREN .)


state 50

    (14) call -> LPAREN LET LPAREN SIMB NUM RPAREN . RPAREN

    RPAREN          shift and go to state 51


state 51

    (14) call -> LPAREN LET LPAREN SIMB NUM RPAREN RPAREN .

    LPAREN          reduce using rule 14 (call -> LPAREN LET LPAREN SIMB NUM RPAREN RPAREN .)
    LET             reduce using rule 14 (call -> LPAREN LET LPAREN SIMB NUM RPAREN RPAREN .)
    SIMB            reduce using rule 14 (call -> LPAREN LET LPAREN SIMB NUM RPAREN RPAREN .)
    NUM             reduce using rule 14 (call -> LPAREN LET LPAREN SIMB NUM RPAREN RPAREN .)
    TEXT            reduce using rule 14 (call -> LPAREN LET LPAREN SIMB NUM RPAREN RPAREN .)
    NIL             reduce using rule 14 (call -> LPAREN LET LPAREN SIMB NUM RPAREN RPAREN .)
    QUOTE           reduce using rule 14 (call -> LPAREN LET LPAREN SIMB NUM RPAREN RPAREN .)
    TRUE            reduce using rule 14 (call -> LPAREN LET LPAREN SIMB NUM RPAREN RPAREN .)
    FALSE           reduce using rule 14 (call -> LPAREN LET LPAREN SIMB NUM RPAREN RPAREN .)
    RPAREN          reduce using rule 14 (call -> LPAREN LET LPAREN SIMB NUM RPAREN RPAREN .)
    $end            reduce using rule 14 (call -> LPAREN LET LPAREN SIMB NUM RPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SIMB in state 17 resolved as shift
WARNING: shift/reduce conflict for NUM in state 17 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 17 resolved as shift
WARNING: shift/reduce conflict for SIMB in state 17 resolved as shift
WARNING: shift/reduce conflict for NUM in state 17 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 17 resolved as shift
WARNING: shift/reduce conflict for NIL in state 17 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 17 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 17 resolved as shift
WARNING: shift/reduce conflict for LET in state 17 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 17 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 17 resolved as shift
WARNING: shift/reduce conflict for SIMB in state 18 resolved as shift
WARNING: shift/reduce conflict for NUM in state 18 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 18 resolved as shift
WARNING: shift/reduce conflict for SIMB in state 18 resolved as shift
WARNING: shift/reduce conflict for NUM in state 18 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 18 resolved as shift
WARNING: shift/reduce conflict for NIL in state 18 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 18 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 18 resolved as shift
WARNING: shift/reduce conflict for LET in state 18 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 18 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 18 resolved as shift
WARNING: shift/reduce conflict for SIMB in state 26 resolved as shift
WARNING: shift/reduce conflict for NUM in state 26 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 26 resolved as shift
WARNING: shift/reduce conflict for SIMB in state 26 resolved as shift
WARNING: shift/reduce conflict for NUM in state 26 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 26 resolved as shift
WARNING: shift/reduce conflict for NIL in state 26 resolved as shift
WARNING: shift/reduce conflict for QUOTE in state 26 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 26 resolved as shift
WARNING: shift/reduce conflict for LET in state 26 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 26 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 26 resolved as shift
WARNING: reduce/reduce conflict in state 17 resolved using rule (empty -> <empty>)
WARNING: rejected rule (atom -> <empty>) in state 17
WARNING: reduce/reduce conflict in state 18 resolved using rule (empty -> <empty>)
WARNING: rejected rule (atom -> <empty>) in state 18
WARNING: reduce/reduce conflict in state 26 resolved using rule (empty -> <empty>)
WARNING: rejected rule (atom -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 29 resolved using rule (items -> empty)
WARNING: rejected rule (item -> empty) in state 29
